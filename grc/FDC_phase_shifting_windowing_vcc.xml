<?xml version="1.0"?>
<block>
  <name>Phase compensating windowing</name>
  <key>FDC_phase_shifting_windowing_vcc</key>
  <category>[FDC]</category>
  <import>import FDC</import>
  <make>FDC.phase_shifting_windowing_vcc($blocklen, $numphasestates, $shifts, $passbw, $stopbw, $windowtype)</make>
  
  <param>
    <name>Block length</name>
    <key>blocklen</key>
    <value>256</value>
    <type>int</type>
  </param>
  
  <param>
    <name>Number of phases</name>
    <key>numphasestates</key>
    <value>4</value>
    <type>int</type>
  </param>
  
  <param>
    <name>Blockwise Phaseshift</name>
    <key>$shifts</key>
    <value>1</value>
    <type>int</type>
  </param>
  
  <param>
    <name>Normalized Pass Bw</name>
    <key>passbw</key>
    <value>0.6</value>
    <type>float</type>
  </param>
  
  <param>
    <name>Normalized Stop Bw</name>
    <key>stopbw</key>
    <value>0.9</value>
    <type>float</type>
  </param>


<param>
		<name>Window Type</name>
		<key>windowtype</key>
		<type>enum</type>
		<option>
			<name>Rectangular</name>
			<key>0</key>
		</option>
		<option>
			<name>Hann</name>
			<key>1</key>
		</option>
		<option>
			<name>Ramp</name>
			<key>2</key>
		</option>
	</param>  
  
  
	<check>$blocklen &gt;= 1</check>
	
	<sink>
		<name>in</name>
		<type>complex</type>
		<vlen>$blocklen</vlen>
	</sink>
	<source>
		<name>out</name>
		<type>complex</type>
		<vlen>$blocklen</vlen>
	</source>
	
<doc>
__Phase compensating windowing__

Multiplies a windowing with continous phase shifts from block to block. 

 * Block length is the input and output vector length
 * Number of phases is the amount of different phase shifted windows
 * Blockwise Phaseshift is the consecutive iteration amount
 * Normalized Pass Bw is the total centered bandwidth to be extracted
 * Normalized Stop Bw is the total bandwidth that is multiplied by zero
 * Window Type defines the transition curve from stop to pass
 
Example: 
PassBW=0.5
StopBW=0.75
WindowType=RAMP
blocklen=200

This equals to a Window with 
w = [  25 samples zeros, 
       25 samples RAMP, 
      100 samples ones, 
       25 samples RAMP, 
       25 samples zeros  ]

With NumberOfPhases=4 this leads to 4 windows, each shifted by PI/4. 
For Shift=3, w_0 is used first, then w_3, then w_2, then w_1 and repeat. 
For shift 0, only the first window is used, equal to no phase shift. 
</doc>

</block>
