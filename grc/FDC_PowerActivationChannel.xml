<?xml version="1.0"?>
<block>
  <name>PowerActivationChannelizer</name>
  <key>FDC_PowerActivationChannel</key>
  <category>[FDC]</category>
  <import>import FDC</import>
  <make>FDC.PowerActivationChannel($v_blocklen, $v_cfreq, $v_bw, $v_relinvovl, $v_thresh, $v_maxblocks, $v_deactivation_delay, $v_msg, $v_fileoutput, $v_path, $verbose, $v_ID)</make>
  <!-- Make one 'param' node for every Parameter you want settable from the GUI.
       Sub-nodes:
       * name
       * key (makes the value accessible as $keyname, e.g. in the make node)
       * type -->
   <param>
    <name>ID</name>
    <key>v_ID</key>
    <value>0</value>
    <type>int</type>
  </param>
       
  <param>
    <name>Blocklen</name>
    <key>v_blocklen</key>
    <value>4096</value>
    <type>int</type>
  </param>

<param>
    <name>Normalized carrierfreq</name>
    <key>v_cfreq</key>
    <value>0.4</value>
    <type>float</type>
  </param>

<param>
    <name>Normalized Bandwidth</name>
    <key>v_bw</key>
    <value>0.1</value>
    <type>float</type>
  </param>

<param>
    <name>Rel. inverse Overlap</name>
    <key>v_relinvovl</key>
    <value>4</value>
    <type>int</type>
  </param>

<param>
    <name>Threshold</name>
    <key>v_thresh</key>
    <value>12.0</value>
    <type>float</type>
  </param>

<param>
    <name>Maximum Blocks</name>
    <key>v_maxblocks</key>
    <value>64</value>
    <type>int</type>
  </param>
<param>
    <name>Deactivation Delay</name>
    <key>v_deactivation_delay</key>
    <value>1</value>
    <type>int</type>
  </param>

<param>
		<name>Msg Output</name>
		<key>v_msg</key>
		<type>enum</type>
		<option>
			<name>Yes</name>
			<key>True</key>
		</option>
		<option>
			<name>No</name>
			<key>False</key>
		</option>
	</param>

<param>
		<name>File output</name>
		<key>v_fileoutput</key>
		<type>enum</type>
		<option>
			<name>Yes</name>
			<key>True</key>
		</option>
		<option>
			<name>No</name>
			<key>False</key>
		</option>
	</param>

    <param>
    <name>Outputfiles</name>
    <key>v_path</key>
    <value>/home/...</value>
    <type>string</type>
  </param>


<param>
		<name>Log/verbose destination</name>
		<key>verbose</key>
		<type>enum</type>
		<option>
			<name>None</name>
			<key>0</key>
		</option>
		<option>
			<name>Print to console</name>
			<key>1</key>
		</option>
		<option>
			<name>Log to file</name>
			<key>2</key>
		</option>
	</param>





 
  <!-- Make one 'sink' node per input. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <sink>
    <name>in</name>
    <type>complex</type>
    <vlen>$v_blocklen</vlen>
  </sink>

  <!-- Make one 'source' node per output. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <source>
    <name>msgout</name>
    <type>message</type>
    <optional>1</optional>
  </source>
  
  
<doc>
##PowerActivationChannelizer##

Author: Gereon Such, gereonsuch@gmail.com

This is a fixed carrier frequency channelizer. 

You may not use this block directly but the wrapping hier block gr-FDC.FrequencyDomainChannelizer

 * Input is a complex vector of length blocklen, containing blockwise overlapped fouriertransformed signal
 * Output is message or file based
 
 * ID is used for unique signal identification. Non-unique IDs with multiple blocks may lead to conflicts, but is unlikely.
 * Blocklen is input vector length
 * Normalized carrierfreq is Mid frequency of the desired channel. Range from [0.0,1.0], representing 0.0 to samp_rate
 * Normalized bandwidth represents the minimum output channel bandwidth. Care: To suffice parameters, output bandwidth is adjusted during initialization
 * Rel. inverse Overlap is the inverse of the used overlap in the input vector. It must be a power of 2, typically 4 is chosen, but not necessarily. 
 * Threshold is the minimum power difference in dB in consecutive blocks to activate and deactivate the channel. 
 * Maximum Blocks smaller 0 leads to only emit messages if the channel end is detected. Equal 0, every block is emitted, greater 0, the according size of blocks is determined as a maximum puffered blocknumber and the data to that point is emitted with according flags.   
 * Deactivation delay is currently not implemented in PowerActivationChannel.
 * Message output determines if the channel data should be emitted via Gnuradio message passing
 * File output determines if the channel data should be emitted as a file
 * Outputfiles is the path to store the channel data if File output is true
 * Log/verbose destination specifies if and how the activity should be logged.
    * None means no logging at all, choose this for maximum runtime efficiency. 
    * Print to console prints all gathered information to console. with many concurrent channelizers, this might mean a lot of messages.
    * Log to file logs the complete output to a file in your home dir or from whereever you instantiated the top_block

If you have any trouble, let me know or feel free to contribute @ github.com/gereonsuch/gr-FDC
</doc>
  
  
  
</block>
